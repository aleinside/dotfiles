[user]
	email = aleinside@gmail.com
	name = Alessandro Nuzzo

[push]
	default = simple

[help]
	autocorrect = 5

[core]
	editor = vim
	excludesfile = /home/ale/.gitignore_global

[color]
	ui = auto

[alias]
	# Basic
	cp = cherry-pick
	st = status -s
	cl = clone
	ci = commit
	co = checkout
	br = branch
	diff = diff --word-diff
	dc = diff --cached

	ai = add --interactive

	# Reset
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard
	# List commits in short form, with colors and branch/tag annotations.
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	# List commits showing changed files
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	# List oneline commits showing dates
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	# List oneline commits showing relative dates
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	# short git log
	le = log --oneline --decorate
	# Show the history of a file, with diffs
	filelog = log -u
	fl = log -u
	# Show modified files in last commit
	dl = "!git ll -1"
	# Show a diff last commit
	dlc = diff --cached HEAD^
	# Show content (full diff) of a commit given a revision
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"
	# Find a file path in codebase
	f = "!git ls-files | grep -i"
	# Search/grep your entire codebase for a string
	grep = grep -Ii
	gr = grep -Ii
	# List your aliases
	la = "!git config -l | grep alias | cut -c 7-"

	#up = !git pull --rebase --prune $@ && git submodule update --init --recursive
	up = pull --rebase --autostash
	cob = checkout -b
	cm = !git add -A && git commit -m
	undo = reset HEAD~1 --mixed
	amend = commit -a --amend
	bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
	bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"

	last = log -1 HEAD
	visual = !gitk

	twig = for-each-ref --sort=-committerdate refs/heads/ --format="%1B[0;33m%(refname:short)%1B[m%09%(authordate:short)%09%(authorname)%09%(objectname:short)%09%(subject)"

	rename = branch -m
